[[inputs.snmp]]
  ## Agent addresses to retrieve values from.
  ##   format:  agents = ["<scheme://><hostname>:<port>"]
  ##   scheme:  optional, either udp, udp4, udp6, tcp, tcp4, tcp6.  
  ##            default is udp
  ##   port:    optional
  ##   example: agents = ["udp://127.0.0.1:161"]
  ##            agents = ["tcp://127.0.0.1:161"]
  ##            agents = ["udp4://v4only-snmp-agent"]
  ##   agents = [ "udp://192.168.1.192:161" , "idracURL2:161" , "idracURL3:161" ]

  agents = [ "udp://192.168.1.192:161" ]
  version = 2
  # timeout for snmptranslate
  timeout = "5s"
  interval = "30s"
  community = "private"
  name = "supermicro"

  [[inputs.snmp.field]]
    # snmpset -v 2c -c private 192.168.1.192 1.3.6.1.2.1.1.5.0 = "supermicro"
    name = "hostname"
    oid = ".1.3.6.1.2.1.1.5.0"
    is_tag = true

  [[inputs.snmp.field]]
    oid = "RFC1213-MIB::sysUpTime.0"
    name = "uptime"

# SuperMicro 
# sensor readings (actual)
# 1.3.6.1.4.1.21317.1.3.1.2
# sensor labels
# 1.3.6.1.4.1.21317.1.3.1.13
# threshold high NR (high non-recoverable)
# 1.3.6.1.4.1.21317.1.3.1.10
# threshold high CT (high critical)
# 1.3.6.1.4.1.21317.1.3.1.9
# threshold low CT (lower critical)
# 1.3.6.1.4.1.21317.1.3.1.6
# threshold low NR (lower non-recoverable)
# 1.3.6.1.4.1.21317.1.3.1.7

  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.1"
    name = "cpu_temp_c"
  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.2"
    name = "sys_temp_c"
  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.3"
    name = "peripherial_temp_c"
  [[inputs.snmp.field]]
    # VRM (voltage regulator module)
    # https://resources.pcb.cadence.com/blog/2021-implementing-vrm-cooling-in-pcb-power-supply-design
    # VRM for a CPU measures around 80°C- 100°C without cooling. 
    # For a GPU, the VRM’s temperature often increases up to 120°C. 
    # The whole idea of a VRM is to provide CPU and GPU with a reliable, efficient power source. 
    # However, an uncontrolled increase in temperature does the opposite.
    oid = "1.3.6.1.4.1.21317.1.3.1.2.4"
    name = "cpu_vrm_in_temp_c"
  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.5"
    name = "vrm_ab_temp_c"
  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.6"
    name = "cpu_voltage"
  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.7"
    name = "dimm_ab_voltage"
  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.8"
    name = "dimm_ab_temp_c"
  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.9"
    name = "m2_ssd1_temp_c"
  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.10"
    name = "fan_1_rpms"
  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.11"
    name = "fan_2_rpms"
  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.12"
    name = "fan_3_rpms"
  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.13"
    name = "fan_4_rpms"
  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.14"
    name = "fan_a_rpms"
  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.15"
    name = "fan_b_rpms"
  [[inputs.snmp.field]]
    oid = "1.3.6.1.4.1.21317.1.3.1.2.16"
    name = "12v_voltage"


#[[outputs.discard]]
  # no configuration -- send metrics to nowhere at all

[[outputs.file]]
    files = ["stdout", "/tmp/metrics.out"]

#[[outputs.prometheus_client]]
#    metric_version = 2
#    path = "/metrics"
#    # 0 no expiration
#    expiration_interval = "60s" 
#    # export metric collection time
#    export_timestamp = true